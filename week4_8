// 10757번
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define SIZE 10005 // 10^10000 -> 10001 자리수
int main()
{
    char A[SIZE] = "", B[SIZE] = "", sum[SIZE] = ""; // 크기 지정 문자열은 초기화x? (=""; 할 수 x)
    scanf("%s%s", A, B);
    int len, flag = 0, i = strlen(A)-1, j = strlen(B)-1;
    if (i > j)
        len = i + 1;
    else
        len = j + 1;
    for (int k = 0; k < len; k++)
    {
        int result = 0;
        result = A[i] - 48 + B[j] - 48 + flag; // 문자와 숫자 차이 == 48 (문자 > 숫자)
        while (result < 0) result += 48; // A와 B 배열의 크기가 다를 경우, 더 작은 배열의 원소가 null이 되면 -48때문에 이상한 문자가 되므로 0이상이 될때까지 +48(또는 +'0')
        if (result > 9)
            flag = 1; // 받아 올림
        else
            flag = 0;
        sum[k] = result % 10 + 48; // 숫자 -> 문자
        i--; j--;
    }
    if (flag == 1)
    {
        sum[len] = '1'; // 맨 앞자리수의 합이 10이상인경우(==받아 올림 필요한경우), 합배열 마지막에 '1'추가
        len+=1;
    }
    
    for (int m = 0; m < len / 2; m++) // 역순으로 저장했으므로 뒤집어서 출력
    {
        char temp = sum[m];
        sum[m] = sum[len - m - 1];
        sum[len - m - 1] = temp;
    }
    printf("%s", sum);
}
